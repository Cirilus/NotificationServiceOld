version: '3.9'

services:
  test_web:
    build:
      context: ./
      dockerfile: Dockerfile
    container_name: web
    ports:
      - "8000:8000"
    command: "go test "
    networks:
      - test
    depends_on:
      postgres:
        condition: service_healthy

  test_migrate:
    image: arigaio/atlas:latest
    command: >
      schema apply 
      --url ${POSTGRES_URL}
    volumes:
      - ./db/:/migrations/
    networks:
      - test
    depends_on:
      postgres:
        condition: service_healthy

  test_postgres:
    image: postgres:latest
    container_name: postgres
    volumes:
      - postgres_storage:/var/lib/postgresql/data
      - ./db:/docker-entrypoint-initdb.d
    env_file:
      - ./.env
    environment:
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - POSTGRES_DB=${POSTGRES_DB}
    ports:
      - "5432:5432"
    networks:
      - test
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -U admin -d db" ]
      interval: 5s
      timeout: 5s
      retries: 5
#
#  keycloak:
#    image: quay.io/keycloak/keycloak:latest
#    depends_on:
#      - postgres
#    container_name: keycloak
#    env_file:
#      - ./.env
#    environment:
#      KC_DB: postgres
#      KC_DB_URL_HOST: postgres
#      KC_DB_URL_DATABASE: keycloak
#      KC_DB_USERNAME: ${POSTGRES_USER}
#      KC_DB_PASSWORD: ${POSTGRES_PASSWORD}
#      KEYCLOAK_ADMIN: admin
#      KEYCLOAK_ADMIN_PASSWORD: admin
#    command:
#      - start-dev
#      - --import-realm
#    ports:
#      - "8080:8080"

volumes:
  test_postgres_storage:

networks:
  test:
    name: test
